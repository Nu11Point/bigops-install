#!/bin/sh
# chkconfig:   2345 80 20
# description: Starts and stops a single elasticsearch instance on this system 

if [ -f /etc/rc.status ]; then
    . /etc/rc.status
    rc_reset
fi

if [ -f /etc/rc.d/init.d/functions ]; then
    . /etc/rc.d/init.d/functions
fi

# Sets the default values for elasticsearch variables used in this script
ES_USER="es"
ES_GROUP="es"

prog="elasticsearch"
pidfile="/var/run/${prog}.pid"
lockfile=/var/lock/subsys/$prog

ES_HOME="/opt/es"
exec="$ES_HOME/bin/elasticsearch"

export JAVA_HOME=$ES_HOME/jdk
export PATH=$JAVA_HOME/bin:$PATH
export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar


checkJava() {
    if [ -x "$JAVA_HOME/bin/java" ]; then
        JAVA="$JAVA_HOME/bin/java"
    else
        JAVA=`which java`
    fi

    if [ ! -x "$JAVA" ]; then
        echo "Could not find any executable java binary. Please install java in your PATH or set JAVA_HOME"
        exit 1
    fi
}

start() {
    sysctl -q -w vm.max_map_count=655360
    ulimit -SHn 655360
    checkJava

    [ -x $exec ] || exit 5

    if [ -n "$pidfile" ] && [ ! -e "$pidfile" ]; then
        touch "$pidfile" && chown "$ES_USER":"$ES_GROUP" "$pidfile"
    fi

    cd $ES_HOME
    echo -n $"Starting $prog: "
    daemon --user $ES_USER --pidfile $pidfile $exec -p $pidfile -d
    retval=$?
    echo
    service kibana restart >/dev/null 2>&1
    [ $retval -eq 0 ] && touch $lockfile
    return $retval
}

stop() {
    echo -n $"Stopping $prog: "
    kibana_pid=`ps aux|grep elasticsearch.pid|grep -v grep|awk '{print $2}'`
    if [ ! -z "$kibana_pid" ];then
        kill -9 $kibana_pid
    fi
    echo
}

restart() {
    stop
    start
}

case "$1" in
    start)
        #rh_status_q && exit 0
        $1
        ;;
    stop)
        #rh_status_q || exit 0
        $1
        ;;
    restart)
        $1
        ;;
    *)
        echo $"Usage: $0 {start|stop|restart}"
        exit 2
esac
exit $?
